{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vamsilingamaneni/Desktop/react-newsapp/src/components/NewsCards/NewsCards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Grow, Typography } from '@material-ui/core';\nimport NewsCard from './NewsCard/NewsCard';\nimport useStyles from './styles.js';\nconst infoCards = [{\n  color: '#00838f',\n  title: 'Latest News',\n  text: 'Give me the latest news'\n}, {\n  color: '#1565c0',\n  title: 'News by Categories',\n  info: 'Business, Entertainment, General, Health, Science, Sports, Technology',\n  text: 'Give me the latest Technology news'\n}, {\n  color: '#4527a0',\n  title: 'News by Terms',\n  info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...',\n  text: 'What\\'s up with PlayStation 5'\n}, {\n  color: '#283593',\n  title: 'News by Sources',\n  info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...',\n  text: 'Give me the news from CNN'\n}];\n\nconst NewsCards = ({\n  articles,\n  activeArticle\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.container,\n        container: true,\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: infoCards.map(infoCard => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          className: classes.infoCard,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            style: {\n              backgroundColor: infoCard.color\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h5\",\n              children: infoCard.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), infoCard.info ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: infoCard.title.split(' ')[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 74\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 123\n              }, this), infoCard.info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 34\n            }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              children: [\"Try saying: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 69\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: infoCard.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 76\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: articles.map((article, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        style: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(NewsCard, {\n          activeArticle: activeArticle,\n          i: i,\n          article: article\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsCards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewsCards;\nexport default NewsCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsCards\");","map":{"version":3,"sources":["/Users/vamsilingamaneni/Desktop/react-newsapp/src/components/NewsCards/NewsCards.js"],"names":["React","Grid","Grow","Typography","NewsCard","useStyles","infoCards","color","title","text","info","NewsCards","articles","activeArticle","classes","length","container","map","infoCard","card","backgroundColor","split","article","i","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Grow, Typography } from '@material-ui/core';\n\nimport NewsCard from './NewsCard/NewsCard';\nimport useStyles from './styles.js';\n\nconst infoCards = [\n  { color: '#00838f', title: 'Latest News', text: 'Give me the latest news' },\n  { color: '#1565c0', title: 'News by Categories', info: 'Business, Entertainment, General, Health, Science, Sports, Technology', text: 'Give me the latest Technology news' },\n  { color: '#4527a0', title: 'News by Terms', info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...', text: 'What\\'s up with PlayStation 5' },\n  { color: '#283593', title: 'News by Sources', info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...', text: 'Give me the news from CNN' },\n];\n\nconst NewsCards = ({ articles, activeArticle }) => {\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return (\n      <Grow in>\n        <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n          {infoCards.map((infoCard) => (\n            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.infoCard}>\n              <div className={classes.card} style={{ backgroundColor: infoCard.color }}>\n                <Typography variant=\"h5\" component=\"h5\">{infoCard.title}</Typography>\n                {infoCard.info ? <Typography variant=\"h6\" component=\"h6\"><strong>{infoCard.title.split(' ')[2]}</strong>: <br />{infoCard.info}</Typography> : null}\n                <Typography variant=\"h6\" component=\"h6\">Try saying: <br /> <i>{infoCard.text}</i></Typography>\n              </div>\n            </Grid>\n          ))}\n        </Grid>\n      </Grow>\n    );\n  }\n\n  return (\n    <Grow in>\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n        {articles.map((article, i) => (\n          <Grid item xs={12} sm={6} md={4} lg={3} style={{ display: 'flex' }}>\n            <NewsCard activeArticle={activeArticle} i={i} article={article} />\n          </Grid>\n        ))}\n      </Grid>\n    </Grow>\n  );\n};\n\nexport default NewsCards;"]},"metadata":{},"sourceType":"module"}