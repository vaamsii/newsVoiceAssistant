{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vamsilingamaneni/Desktop/react-newsapp/src/components/NewsCards/NewsCards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Grow, Typography } from '@material-ui/core'; //this allows for dynamic Ui, it will be mobile compitable\n\nimport NewsCard from '../NewsCard/NewsCard';\nimport useStyles from './styles.js';\nconst infoCards = [{\n  color: '#00838f',\n  title: 'Latest News',\n  text: 'Give me the latest news'\n}, {\n  color: '#1565c0',\n  title: 'News by Categories',\n  info: 'Business, Entertainment, General, Health, Science, Sports, Technology',\n  text: 'Give me the latest Technology news'\n}, {\n  color: '#4527a0',\n  title: 'News by Terms',\n  info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...',\n  text: 'What\\'s up with PlayStation 5'\n}, {\n  color: '#283593',\n  title: 'News by Sources',\n  info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...',\n  text: 'Give me the news from CNN'\n}];\n\nconst NewsCards = ({\n  articles,\n  activeArticle\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.container,\n        container: true,\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: infoCards.map(infoCard => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          className: classes.infoCard,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            style: {\n              backgroundColor: infoCard.color\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: [infoCard.title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), infoCard.info ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [infoCard.title.split(' ')[2], \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 74\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 122\n              }, this), infoCard.info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 47\n            }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Try Saying: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 68\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: infoCard.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 75\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)]\n          }, article, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: articles.map((article, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        style: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(NewsCard, {\n          article: article,\n          activeArticle: activeArticle,\n          i: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewsCards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewsCards;\nexport default NewsCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsCards\");","map":{"version":3,"sources":["/Users/vamsilingamaneni/Desktop/react-newsapp/src/components/NewsCards/NewsCards.js"],"names":["React","Grid","Grow","Typography","NewsCard","useStyles","infoCards","color","title","text","info","NewsCards","articles","activeArticle","classes","length","container","map","infoCard","card","backgroundColor","split","article","i","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Grid, Grow, Typography} from '@material-ui/core'; //this allows for dynamic Ui, it will be mobile compitable\n\nimport NewsCard from '../NewsCard/NewsCard';\n\nimport useStyles from './styles.js';\n\nconst infoCards = [\n    { color: '#00838f', title: 'Latest News', text: 'Give me the latest news' },\n    { color: '#1565c0', title: 'News by Categories', info: 'Business, Entertainment, General, Health, Science, Sports, Technology', text: 'Give me the latest Technology news' },\n    { color: '#4527a0', title: 'News by Terms', info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...', text: 'What\\'s up with PlayStation 5' },\n    { color: '#283593', title: 'News by Sources', info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...', text: 'Give me the news from CNN' },\n  ];\n\n\nconst NewsCards = ({articles, activeArticle}) => {\n    const classes = useStyles();\n\n    if(!articles.length){\n        return(\n            <Grow in>\n            <Grid className = {classes.container} container alignItems=\"stretch\" spacing = {3}>\n                {infoCards.map((infoCard) => (\n                    <Grid item xs = {12} sm = {6} md = {4} lg = {3} className = {classes.infoCard}>\n                        <div className={classes.card} key = {article} style= {{backgroundColor: infoCard.color}}>\n                            <Typography variant = \"h5\">{infoCard.title} </Typography>\n                            {infoCard.info ? (<Typography variant = \"h6\"><strong>{infoCard.title.split(' ')[2]}:</strong><br />{infoCard.info}</Typography>): null}\n                            <Typography variant = \"h6\">Try Saying: <br /> <i>{infoCard.text}</i> </Typography>\n                        </div>\n                    </Grid>\n                    \n                ))}\n            </Grid>\n            </Grow>\n        );\n    }\n\n\n\n    return (\n        <Grow in>\n            <Grid className = {classes.container} container alignItems=\"stretch\" spacing = {3}>\n            {articles.map((article, i) => (\n                <Grid item xs = {12} sm = {6} md = {4} lg = {3} style = {{display: 'flex'}}>\n                    <NewsCard article = {article} activeArticle={activeArticle} i={i} />\n                </Grid>\n            ))}\n            </Grid>\n            \n        </Grow>\n    );\n}\n\nexport default NewsCards;\n"]},"metadata":{},"sourceType":"module"}